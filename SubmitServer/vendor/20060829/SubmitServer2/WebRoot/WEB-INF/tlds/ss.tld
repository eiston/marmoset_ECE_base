<?xml version="1.0" encoding="UTF-8" ?>

<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
	version="2.0">

	<description>Marmoset submitserver tags</description>
	<display-name>submitserver</display-name>
	<tlib-version>1.0</tlib-version>
	<short-name>ss</short-name>
	<uri>http://www.cs.umd.edu/marmoset/ss</uri>

	<tag-file>
		<name>head</name>
		<path>/WEB-INF/tags/head.tag</path>
	</tag-file>

	<tag-file>
		<name>header</name>
		<path>/WEB-INF/tags/header.tag</path>
	</tag-file>

	<tag-file>
		<name>footer</name>
		<path>/WEB-INF/tags/footer.tag</path>
	</tag-file>

	<tag-file>
		<name>breadCrumb</name>
		<path>/WEB-INF/tags/breadCrumb.tag</path>
	</tag-file>

	<tag-file>
		<name>instructorBreadCrumb</name>
		<path>/WEB-INF/tags/instructorBreadCrumb.tag</path>
	</tag-file>


	<tag-file>
		<name>loginBreadCrumb</name>
		<path>/WEB-INF/tags/loginBreadCrumb.tag</path>
	</tag-file>

	<tag-file>
		<name>missingIdOrPasswordMessage</name>
		<path>/WEB-INF/tags/missingIdOrPasswordMessage.tag</path>
	</tag-file>

	<tag-file>
		<name>noSuchIdMessage</name>
		<path>/WEB-INF/tags/noSuchIdMessage.tag</path>
	</tag-file>

	<tag-file>
		<name>authenticationFailedMessage</name>
		<path>/WEB-INF/tags/authenticationFailedMessage.tag</path>
	</tag-file>

	<tag-file>
		<name>authenticationFailedMessageGeneric</name>
		<path>/WEB-INF/tags/authenticationFailedMessageGeneric.tag</path>
	</tag-file>

	<tag-file>
		<name>loginForm</name>
		<path>/WEB-INF/tags/loginForm.tag</path>
	</tag-file>

	<tag-file>
		<name>campusUID</name>
		<path>/WEB-INF/tags/campusUID.tag</path>
	</tag-file>
	<tag-file>
		<name>employeeNum</name>
		<path>/WEB-INF/tags/employeeNum.tag</path>
	</tag-file>
	<tag-file>
		<name>registerStudentsFileFormat</name>
		<path>/WEB-INF/tags/registerStudentsFileFormat.tag</path>
	</tag-file>

	<!-- 
		Project Tags	
	-->
	<tag-file>
		<name>inconsistentBackgroundRetestDescription</name>
		<path>/WEB-INF/tags/projectTags/inconsistentBackgroundRetestDescription.tag</path>
	</tag-file>
	<tag-file>
		<name>projectTestResultsTable</name>
		<path>/WEB-INF/tags/projectTags/projectTestResultsTable.tag</path>
	</tag-file>
	<tag-file>
		<name>projectMenu</name>
		<path>/WEB-INF/tags/projectTags/projectMenu.tag</path>
	</tag-file>
	<tag-file>
		<name>projectTitle</name>
		<path>/WEB-INF/tags/projectTags/projectTitle.tag</path>
	</tag-file>
	<tag-file>
		<name>projectLegend</name>
		<path>/WEB-INF/tags/projectTags/projectLegend.tag</path>
	</tag-file>
	<tag-file>
		<name>projectOverviewTable</name>
		<path>/WEB-INF/tags/projectTags/projectOverviewTable.tag</path>
	</tag-file>
	<tag-file>
		<name>studentsWithoutSubmissionsTable</name>
		<path>/WEB-INF/tags/projectTags/studentsWithoutSubmissionsTable.tag</path>
	</tag-file>
	<tag-file>
		<name>submissionDetails</name>
		<path>/WEB-INF/tags/projectTags/submissionDetails.tag</path>
	</tag-file>
	
	<!-- 
	Table tags
	-->
	<tag-file>
		<name>studentWrittenTestOutcomesTable</name>
		<path>/WEB-INF/tags/tableTags/studentWrittenTestOutcomesTable.tag</path>
	</tag-file>
	<tag-file>
		<name>uncoveredMethodsTable</name>
		<path>/WEB-INF/tags/tableTags/uncoveredMethodsTable.tag</path>
	</tag-file>
	<tag-file>
		<name>allOutcomesTable</name>
		<path>/WEB-INF/tags/tableTags/allOutcomesTable.tag</path>
	</tag-file>
	<tag-file>
		<name>pmdOutcomesTable</name>
		<path>/WEB-INF/tags/tableTags/pmdOutcomesTable.tag</path>
	</tag-file>
	<tag-file>
		<name>findBugsTable</name>
		<path>/WEB-INF/tags/tableTags/findBugsTable.tag</path>
	</tag-file>
	<tag-file>
		<name>sourceFilesTable</name>
		<path>/WEB-INF/tags/tableTags/sourceFilesTable.tag</path>
	</tag-file>
	<!-- 
	Functions
	-->
  <function>
    <description>
      Generate &lt;col&gt; tags for a given number of columns, then generate one for each
      using the col.right class to present a
      darker right border to separate the different test types.
    </description>
    <name>formattedColumnHeaders</name>
    <function-class>edu.umd.cs.marmoset.modelClasses.TestOutcomeCollection</function-class>
    <function-signature>java.lang.String formattedColumnHeaders(int, edu.umd.cs.marmoset.modelClasses.TestOutcomeCollection)</function-signature>
    <example>
      ${ss.formatTestHeaderTop(10, canonicalTestResults)}
    </example>  
  </function>

  <function>
    <description>
      Generate html table formatted version of test outcomes
    </description>
    <name>formattedTestHeaderTop</name>
    <function-class>edu.umd.cs.marmoset.modelClasses.TestOutcomeCollection</function-class>
    <function-signature>java.lang.String formattedTestHeaderTop(edu.umd.cs.marmoset.modelClasses.TestOutcomeCollection)</function-signature>
    <example>
      Name: ${ss.formatTestHeaderTop(canonicalTestResults)}
    </example>  
  </function>

  <function>
    <description>
      Generate html table formatted version of test outcomes
    </description>
    <name>formattedTestHeader</name>
    <function-class>edu.umd.cs.marmoset.modelClasses.TestOutcomeCollection</function-class>
    <function-signature>java.lang.String formattedTestHeader(edu.umd.cs.marmoset.modelClasses.TestOutcomeCollection)</function-signature>
    <example>
      Name: ${ss.formatTestHeader(canonicalTestResults)}
    </example>  
  </function>

  <function>
    <description>
      Generate html table formatted version of test outcomes
    </description>
    <name>formattedTestResults</name>
    <function-class>edu.umd.cs.marmoset.modelClasses.TestOutcomeCollection</function-class>
    <function-signature>java.lang.String formattedTestResults(edu.umd.cs.marmoset.modelClasses.TestOutcomeCollection,edu.umd.cs.marmoset.modelClasses.TestOutcomeCollection)</function-signature>
    <example>
      Name: ${ss.formatTestResults(canonicalTestResults,testResults)}
    </example>  
  </function>
  
  <function>
  	<description>
  		Generate font-hightlighted source code in HTML
  	</description>
  	<name>displaySourceCode</name>
  	<function-class>edu.umd.cs.submitServer.DisplaySubmissionSourceCode</function-class>
  	<function-signature>java.lang.String displaySourceCode(java.sql.Connection,edu.umd.cs.marmoset.modelClasses.Submission,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,edu.umd.cs.marmoset.codeCoverage.CodeCoverageResults)</function-signature>
  	<example>
  	  Name: ${ss.displaySourceCode(connection, submission, sourceFileName, startHighlight, numToHighlight, numContext, codeCoverageResults)}
  	</example>
  </function>

  <function>
    <description>
    	Count the number of submissions remaining for retest for a given projectPK
    </description>
    <name>numForRetest</name>
  	<function-class>edu.umd.cs.marmoset.modelClasses.Queries</function-class>
  	<function-signature>int countNumSubmissionsForRetest(java.lang.String, java.sql.Connection)</function-signature>
  	<example>
  	  Name: ${ss.numForRetest(projectPK, connection)}
  	</example>
  </function>
  
    <function>
    <description>
    	Count the number of submissions that need to be tested for a given projectPK
    </description>
    <name>numToTest</name>
  	<function-class>edu.umd.cs.marmoset.modelClasses.Queries</function-class>
  	<function-signature>int countNumSubmissionsToTest(java.lang.String, java.sql.Connection)</function-signature>
  	<example>
  	  Name: ${ss.numToTest(projectPK, connection)}
  	</example>
  </function>
  
  <function>
  <description>
  	Figure out if a radio button should be checked
  </description>
  <name>checked</name>
  <function-class>edu.umd.cs.submitServer.SubmitServerUtilities</function-class>
  <function-signature>java.lang.String checked(java.lang.String, java.lang.String)</function-signature>
  <example>
  	Name: ${ss.checked(s1, s2)}
  </example>
  </function>
  
  <function>
  <description>
  	Figure out if an option of a select pull-down menu should be the default selected one
  </description>
  <name>selected</name>
  <function-class>edu.umd.cs.submitServer.SubmitServerUtilities</function-class>
  <function-signature>java.lang.String selected(java.lang.String, java.lang.String)</function-signature>
  <example>
  	Name: ${ss.selected(s1, s2)}
  </example>
  </function>
  
  <function>
  <description>
  	Check if the coverage of a given release test that failed due to a run-time 
	exception has public/student tests that cover the source of the exception
    or range lines before it.
  </description>
  <name>isApproximatelyCovered</name>
  <function-class>edu.umd.cs.marmoset.modelClasses.TestOutcomeCollection</function-class>
  <function-signature>boolean isApproximatelyCovered(edu.umd.cs.marmoset.modelClasses.TestOutcomeCollection, edu.umd.cs.marmoset.modelClasses.TestOutcome)</function-signature>
  <example>
  	Name: ${ss.isApproximatelyCovered(collection, outcome)}
  </example>
  </function>
  
  <function>
  <description>
  	Generate a string that is a random password
  </description>
  <name>nextRandomPassword</name>
  <function-class>edu.umd.cs.marmoset.utilities.MarmosetUtilities</function-class>
  <function-signature>java.lang.String nextRandomPassword(void)</function-signature>
  <example>
  	Name: ${ss.nextRandomPassword()}
  </example>
  </function>
</taglib>
