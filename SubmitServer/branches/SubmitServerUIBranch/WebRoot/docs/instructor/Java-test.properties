# Example test.properties for a Java project

# Specify the language as Java so the Java builder and tester are used
build.language=java

# Java source version to specify when invoking javac.
# Default is 1.5.
build.sourceVersion=1.5

#
# Classnames of public, release, secret and student tests.
#
# Please make sure that the names you specify here match
# EXACTLY to the names of the classes you're including.
# Currently we don't do any sanity checking on the server.
#
# Don't leave these entries blank; if you don't want a particular
# class of tests, then comment out the entire line like the 
# test.class.secret line in this sample file.
#
# Also note that if you want student tests, you MUST include
# an empty JUnit test class as a placeholder.  It can
# have no tests, or one sample test or something like that.
# We'll run all the tests the student writes and store them in the
# database.
#

test.class.public=PublicTests
test.class.release=ReleaseTests
#test.class.secret=SecretTests
test.class.student=StudentTests

# The timeout for individual tests, in seconds.
# Defaults to 30 seconds.
# Don't set this too high.
test.timeout.testCase=30

# The test *process* timeout in seconds.
# If this property is not specified, it defaults
# to 60.
test.timeout.testProcess=600

# Maximum number of bytes to read from test process.
# Default is 1MB.
test.output.maxBytes=1048576

# If this is true, then the test processes run in the instructor
# directory (where the project jarfile is extracted),
# rather than the student directory (where the submission is built).
# Default is false.
test.runInInstructorDir=false

# Should we compute code coverage for each test case?
# Note that this also requires additional persmissions in the
# security.policy file to add permission to read/write /tmp/*
# for the code coverage DB and also the RuntimePermission to
# add a shutdown hook.
test.performCodeCoverage=true
